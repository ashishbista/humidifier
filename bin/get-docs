#!/usr/bin/env ruby

require 'bundler/setup'
require 'fileutils'
require 'net/http'
require 'nokogiri'
require 'uri'

FileUtils.rm(Dir.glob(File.join('specs', '*')))

def get_url(page)
  base_url = 'http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/'
  Net::HTTP.get_response(URI.parse(base_url + page)).body
end

Nokogiri::HTML(get_url('aws-template-resource-type-ref.html')).css('.highlights ul li a').each do |link|
  contents = Nokogiri::HTML(get_url(link['href'])).at_css('.programlisting').text.strip.split("\n")
  next unless (type_line = contents.grep(/Type/).first) && contents.grep(/Properties/).first

  File.open(File.join('specs', type_line.scan(/AWS::(.*?)::(.*?)\"/).first.join('-') + '.cf'), 'w') do |file|
    file.write(contents.join("\n"))
  end
end

require 'humidifier'

File.open('docs/api.md', 'w') do |file|
  file.write("# API Reference\n\n")

  Humidifier::Resource.registry.keys.sort.group_by { |name| name.split('::')[1] }.each do |module_name, aws_names|
    file.write("- #{module_name}\n")
    aws_names.each do |aws_name|
      file.write("  - [#{aws_name.split('::').last}](##{aws_name.delete(':').downcase})\n")
    end
  end
  file.write("\n")

  Humidifier::Resource.registry.sort.each do |aws_name, clazz|
    file.write("### #{aws_name}\n\n")
    clazz.props.sort.each do |name, prop|
      prop_type = prop.class.name.split('::').last.gsub(/Prop\z/, '')
      file.write("* #{name.gsub('_', '\_')} (#{prop.key}: #{prop_type})\n")
    end
    file.write("\n")
  end
end
